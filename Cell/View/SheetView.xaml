<UserControl
    x:Class="Cell.View.SheetView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Cell.View"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModel="clr-namespace:Cell.ViewModel"
    d:DataContext="{d:DesignInstance Type=viewModel:SheetViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <ListBox
        Grid.RowSpan="3"
        Grid.ColumnSpan="3"
        Margin="0"
        Padding="0"
        Background="{StaticResource CellBackground}"
        BorderThickness="0"
        ItemsSource="{Binding Path=CellViewModels}">
        <ListBox.Resources>
            <Style TargetType="Label">
                <Setter Property="Foreground" Value="{Binding ForegroundColor}" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="HorizontalAlignment" Value="{Binding HorizontalAlignmentForView}" />
                <Setter Property="VerticalAlignment" Value="{Binding VerticalAlignmentForView}" />
            </Style>

            <Style TargetType="TextBox">
                <Setter Property="Background" Value="{Binding BackgroundColor}" />
                <Setter Property="Foreground" Value="{Binding ForegroundColor}" />
                <Setter Property="BorderBrush" Value="{Binding BorderColor}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="0" />
            </Style>

            <Style
                x:Key="CellCheckBoxStyle"
                BasedOn="{StaticResource {x:Type CheckBox}}"
                TargetType="{x:Type CheckBox}">
                <Setter Property="Background" Value="{Binding ContentBackgroundColor}" />
                <Setter Property="Foreground" Value="{Binding ForegroundColor}" />
                <Setter Property="BorderBrush" Value="{Binding ContentBorderColor}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="0" />
            </Style>

            <Style TargetType="Button">
                <Setter Property="Background" Value="{Binding BackgroundColor}" />
                <Setter Property="Foreground" Value="{Binding ForegroundColor}" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{Binding BorderColor}"
                                BorderThickness="1">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource SelectedColor}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--  ________________________________________________________________________________________________________________________________________________________________________________________________________________________  -->
            <DataTemplate DataType="{x:Type viewModel:RowCellViewModel}">
                <Grid>
                    <Label
                        Padding="0"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        Content="{Binding Text}"
                        Foreground="{StaticResource ForegroundColor}" />
                </Grid>
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModel:ColumnCellViewModel}">
                <Grid>
                    <Label
                        Padding="0"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        Content="{Binding Text}"
                        Foreground="{StaticResource ForegroundColor}" />
                </Grid>
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModel:CornerCellViewModel}">
                <Label />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModel:LabelCellViewModel}">
                <TextBlock
                    Margin="3"
                    HorizontalAlignment="{Binding HorizontalAlignmentForView}"
                    VerticalAlignment="{Binding VerticalAlignmentForViewCenter}"
                    FontFamily="{Binding FontFamily}"
                    FontSize="{Binding FontSize}"
                    FontStyle="{Binding FontStyleForView}"
                    FontWeight="{Binding FontWeightForView}"
                    Text="{Binding Path=Text}"
                    TextAlignment="{Binding TextAlignmentForView}"
                    TextDecorations="{Binding TextDecorationsForView}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModel:CheckboxCellViewModel}">
                <CheckBox
                    Margin="2"
                    HorizontalAlignment="{Binding HorizontalAlignmentForView}"
                    VerticalAlignment="{Binding VerticalAlignmentForView}"
                    VerticalContentAlignment="Center"
                    Background="{Binding ContentBackgroundColor}"
                    BorderBrush="{Binding ContentBorderColor}"
                    BorderThickness="{Binding ContentBorderThickness}"
                    Command="{Binding CheckboxCheckedCommand}"
                    Content="{Binding Path=Text}"
                    FontFamily="{Binding FontFamily}"
                    FontSize="{Binding FontSize}"
                    Foreground="{Binding ForegroundColor}"
                    IsChecked="{Binding IsChecked}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModel:ButtonCellViewModel}">
                <Button
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Command="{Binding ButtonClickedCommand}"
                    FontFamily="{Binding FontFamily}"
                    FontSize="{Binding FontSize}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border
                                Margin="3"
                                Padding="0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                BorderBrush="{Binding ContentBorderColor}"
                                BorderThickness="{Binding ContentBorderThickness}">
                                <Border.Style>
                                    <Style>
                                        <Setter Property="Border.Background" Value="{Binding ContentBackgroundColor}" />
                                        <Style.Triggers>
                                            <Trigger Property="Border.IsMouseOver" Value="True">
                                                <Setter Property="Border.Background" Value="{StaticResource SelectedColor}" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <ContentPresenter
                                    Margin="0"
                                    HorizontalAlignment="{Binding HorizontalAlignmentForViewCenter}"
                                    VerticalAlignment="{Binding VerticalAlignmentForViewCenter}" />
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                    <TextBlock
                        Margin="3"
                        HorizontalAlignment="{Binding HorizontalAlignmentForView}"
                        VerticalAlignment="{Binding VerticalAlignmentForViewCenter}"
                        FontFamily="{Binding FontFamily}"
                        FontSize="{Binding FontSize}"
                        FontStyle="{Binding FontStyleForView}"
                        FontWeight="{Binding FontWeightForView}"
                        Text="{Binding Path=Text}"
                        TextAlignment="{Binding TextAlignmentForView}"
                        TextDecorations="{Binding TextDecorationsForView}" />
                </Button>
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModel:TextboxCellViewModel}">
                <TextBox
                    Margin="3"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Background="{Binding ContentBackgroundColor}"
                    BorderBrush="{Binding ContentBorderColor}"
                    BorderThickness="{Binding ContentBorderThickness}"
                    FontFamily="{Binding FontFamily}"
                    FontSize="{Binding FontSize}"
                    KeyDown="TextBoxKeyDownForCell"
                    Loaded="CellTextBoxLoaded"
                    Text="{Binding Path=Text, Mode=TwoWay}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModel:DropdownCellViewModel}">
                <ComboBox
                    MinWidth="30"
                    Margin="3"
                    VerticalAlignment="Stretch"
                    Background="{Binding ContentBackgroundColor}"
                    Foreground="{Binding ForegroundColor}"
                    BorderBrush="{Binding ContentBorderColor}"
                    FontFamily="{Binding FontFamily}"
                    FontSize="{Binding FontSize}"
                    ItemsSource="{Binding DropdownOptions}"
                    SelectedItem="{Binding Text}"
                    Text="{Binding Path=Text, Mode=TwoWay}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModel:ProgressCellViewModel}">
                <Rectangle
                    Width="{Binding ProgressBarWidth}"
                    Height="{Binding ProgressBarHeight}"
                    Margin="3"
                    HorizontalAlignment="Left"
                    Fill="{Binding ForegroundColor}" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModel:ListCellViewModel}">
                <ListBox
                    x:Name="CellListBox"
                    Margin="3"
                    Background="{Binding ContentBackgroundColor}"
                    BorderThickness="{Binding ContentBorderThickness}"
                    BorderBrush="{Binding ContentBorderColor}"
                    Foreground="{Binding ForegroundColor}"
                    ItemsSource="{Binding ListItems}"
                    ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                    ScrollViewer.VerticalScrollBarVisibility="Hidden"
                    SelectedItem="{Binding Text}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Label
                                Margin="3"
                                Padding="0"
                                Content="{Binding}"
                                FontFamily="{Binding DataContext.FontFamily, ElementName=CellListBox}"
                                FontSize="{Binding DataContext.FontSize, ElementName=CellListBox}"
                                Foreground="{Binding DataContext.ForegroundColor, ElementName=CellListBox}" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModel:GraphCellViewModel}">
                <Polyline
                    ClipToBounds="False"
                    Points="{Binding DataPoints}"
                    Stroke="{Binding ForegroundColor}"
                    StrokeEndLineCap="Round"
                    StrokeMiterLimit="0"
                    StrokeStartLineCap="Round"
                    StrokeThickness="2" />
            </DataTemplate>
        </ListBox.Resources>
        <ListBox.ItemsPanel>
            <ItemsPanelTemplate>
                <local:PanAndZoomCanvas
                    x:Name="canvas"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Loaded="PanZoomCanvasLoaded" />
            </ItemsPanelTemplate>
        </ListBox.ItemsPanel>
        <ListBox.ItemContainerStyle>
            <Style TargetType="ListBoxItem">
                <Setter Property="Foreground" Value="{Binding ForegroundColor}" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Grid
                                Width="{Binding Width}"
                                Height="{Binding Height}"
                                Background="{Binding BackgroundColor}"
                                PreviewMouseDown="CellPreviewMouseDown"
                                PreviewMouseMove="CellPreviewMouseMove"
                                PreviewMouseUp="CellPreviewMouseUp"
                                SnapsToDevicePixels="True">
                                <Border BorderBrush="{Binding BorderColor}" BorderThickness="{Binding BorderThickness}">
                                    <ContentPresenter
                                        Margin="0"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        Content="{TemplateBinding Content}"
                                        SnapsToDevicePixels="True" />
                                </Border>
                                <Border
                                    Background="{Binding SelectionColor}"
                                    BorderBrush="{Binding SelectionBorderColor}"
                                    BorderThickness="2"
                                    IsHitTestVisible="False"
                                    SnapsToDevicePixels="True"
                                    Visibility="{Binding ShouldShowSelectionBorder, Converter={StaticResource btv}}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ListBox.ItemContainerStyle>
    </ListBox>
</UserControl>
