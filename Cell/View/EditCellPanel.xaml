<UserControl
    x:Class="Cell.View.EditCellPanel"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Cell.View"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModel="clr-namespace:Cell.ViewModel"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    d:DataContext="{d:DesignInstance Type=viewModel:CellViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <ContentControl Content="{Binding}">
        <ContentControl.Resources>
            <DataTemplate DataType="{x:Type viewModel:RowCellViewModel}">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Width="100" Content="Height" />
                        <TextBox
                            Width="100"
                            KeyDown="TextBoxKeyDown"
                            Text="{Binding Path=Height, UpdateSourceTrigger=LostFocus}" />
                    </StackPanel>
                    <Button Click="CreateNewRowAboveButtonClicked" Content="Insert Row Above" />
                    <Button Click="CreateNewRowBelowButtonClicked" Content="Insert Row Below" />
                    <Button Click="DeleteRowButtonClicked" Content="Delete Row" />
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModel:ColumnCellViewModel}">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Width="100" Content="Width" />
                        <TextBox
                            Width="100"
                            KeyDown="TextBoxKeyDown"
                            Text="{Binding Path=Width, UpdateSourceTrigger=LostFocus}" />
                    </StackPanel>
                    <Button Click="CreateNewColumnToTheLeftButtonClicked" Content="Insert Column to Left" />
                    <Button Click="CreateNewColumnToTheRightButtonClicked" Content="Insert Column to Right" />
                    <Button Click="DeleteColumnButtonClicked" Content="Delete Column" />
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModel:CellViewModel}">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Width="50" Content="Color" />
                        <xctk:ColorPicker
                            Width="25"
                            Background="AliceBlue"
                            ButtonStyle="{StaticResource ColorPickerToggleButtonStyle}"
                            Loaded="ColorPicker_Loaded"
                            SelectedColor="{Binding BackgroundColorHex, Converter={StaticResource HexToColorConverter}}" />
                        <xctk:ColorPicker
                            Width="25"
                            Background="AliceBlue"
                            ButtonStyle="{StaticResource ColorPickerToggleButtonStyle}"
                            Loaded="ColorPicker_Loaded"
                            SelectedColor="{Binding ContentBackgroundColorHex, Converter={StaticResource HexToColorConverter}}" />
                        <xctk:ColorPicker
                            Width="25"
                            ButtonStyle="{StaticResource ColorPickerToggleButtonStyle}"
                            Foreground="{StaticResource ForegroundColor}"
                            Loaded="ColorPicker_Loaded"
                            SelectedColor="{Binding ForegroundColorHex, Converter={StaticResource HexToColorConverter}}" />
                        <xctk:ColorPicker
                            Width="25"
                            ButtonStyle="{StaticResource ColorPickerToggleButtonStyle}"
                            Loaded="ColorPicker_Loaded"
                            SelectedColor="{Binding BorderColorHex, Converter={StaticResource HexToColorConverter}}" />
                        <xctk:ColorPicker
                            Width="25"
                            ButtonStyle="{StaticResource ColorPickerToggleButtonStyle}"
                            Loaded="ColorPicker_Loaded"
                            SelectedColor="{Binding ContentBorderColorHex, Converter={StaticResource HexToColorConverter}}" />
                        <xctk:ColorPicker
                            Width="25"
                            ButtonStyle="{StaticResource ColorPickerToggleButtonStyle}"
                            Loaded="ColorPicker_Loaded"
                            SelectedColor="{Binding ContentHighlightColorHex, Converter={StaticResource HexToColorConverter}}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Width="50" Content="Border" />
                        <TextBox
                            Width="41"
                            KeyDown="TextBoxKeyDown"
                            Text="{Binding Path=BorderThicknessString, UpdateSourceTrigger=LostFocus}" />
                        <TextBox
                            Width="42"
                            KeyDown="TextBoxKeyDown"
                            Text="{Binding Path=ContentBorderThicknessString, UpdateSourceTrigger=LostFocus}" />
                        <TextBox
                            Width="42"
                            KeyDown="TextBoxKeyDown"
                            Text="{Binding Path=MarginString, UpdateSourceTrigger=LostFocus}" />
                        <Grid>
                            <ToggleButton
                                x:Name="TogglePopupButton"
                                Width="25"
                                Content="⇆"
                                FontSize="14">
                                <ToggleButton.Style>
                                    <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Background" Value="{StaticResource CellBackground}" />
                                        <Setter Property="Foreground" Value="{StaticResource ForegroundColor}" />
                                        <Setter Property="BorderBrush" Value="{StaticResource CellBorderColor}" />
                                        <Setter Property="IsHitTestVisible" Value="True" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border
                                                        Background="{TemplateBinding Background}"
                                                        BorderBrush="{StaticResource CellBorderColor}"
                                                        BorderThickness="1">
                                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="{StaticResource SelectedColor}" />
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Background" Value="{StaticResource SelectedColor}" />
                                            </Trigger>
                                            <DataTrigger Binding="{Binding ElementName=Popup, Path=IsOpen}" Value="True">
                                                <Setter Property="IsHitTestVisible" Value="False" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <Popup
                                x:Name="Popup"
                                IsOpen="{Binding IsChecked, ElementName=TogglePopupButton, Mode=TwoWay}"
                                Placement="Bottom"
                                PlacementTarget="{Binding ElementName=TogglePopupButton}"
                                PopupAnimation="Slide"
                                StaysOpen="False">
                                <Border BorderBrush="{StaticResource SelectedBorderColor}" BorderThickness="4">
                                    <StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <Button
                                                Click="SetAlignmentToTopLeftButtonClick"
                                                Content="↖"
                                                Style="{StaticResource AlignmentButtonStyle}" />
                                            <Button
                                                Click="SetAlignmentToTopButtonClick"
                                                Content="↑"
                                                Style="{StaticResource AlignmentButtonStyle}" />
                                            <Button
                                                Click="SetAlignmentToTopRightButtonClick"
                                                Content="↗"
                                                Style="{StaticResource AlignmentButtonStyle}" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <Button
                                                Click="SetAlignmentToLeftButtonClick"
                                                Content="←"
                                                Style="{StaticResource AlignmentButtonStyle}" />
                                            <Button
                                                Click="SetAlignmentToCenterButtonClick"
                                                Content="•"
                                                Style="{StaticResource AlignmentButtonStyle}" />
                                            <Button
                                                Click="SetAlignmentToRightButtonClick"
                                                Content="→"
                                                Style="{StaticResource AlignmentButtonStyle}" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <Button
                                                Click="SetAlignmentToBottomLeftButtonClick"
                                                Content="↙"
                                                Style="{StaticResource AlignmentButtonStyle}" />
                                            <Button
                                                Click="SetAlignmentToBottomButtonClick"
                                                Content="↓"
                                                Style="{StaticResource AlignmentButtonStyle}" />
                                            <Button
                                                Click="SetAlignmentToBottomRightButtonClick"
                                                Content="↘"
                                                Style="{StaticResource AlignmentButtonStyle}" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <Button
                                                Click="SetTextAlignmentToLeftButtonClick"
                                                Content="←"
                                                Style="{StaticResource AlignmentButtonStyle}" />
                                            <Button
                                                Click="SetTextAlignmentToCenterButtonClick"
                                                Content="•"
                                                Style="{StaticResource AlignmentButtonStyle}" />
                                            <Button
                                                Click="SetTextAlignmentToRightButtonClick"
                                                Content="→"
                                                Style="{StaticResource AlignmentButtonStyle}" />
                                        </StackPanel>
                                    </StackPanel>
                                </Border>
                            </Popup>
                        </Grid>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Width="50" Content="Font" />
                        <TextBox
                            Width="75"
                            KeyDown="TextBoxKeyDown"
                            Text="{Binding Path=FontFamily, UpdateSourceTrigger=LostFocus}" />
                        <TextBox
                            Width="27"
                            HorizontalContentAlignment="Center"
                            KeyDown="TextBoxKeyDown"
                            Text="{Binding Path=FontSize, UpdateSourceTrigger=LostFocus}" />
                        <ToggleButton
                            Width="16"
                            Content="b"
                            FontWeight="Bold"
                            IsChecked="{Binding IsFontBold}" />
                        <ToggleButton
                            Width="16"
                            Content="i"
                            FontStyle="Italic"
                            IsChecked="{Binding IsFontItalic}" />
                        <ToggleButton Width="16" IsChecked="{Binding IsFontStrikethrough}">
                            <TextBlock Text="s" TextDecorations="Strikethrough" />
                        </ToggleButton>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label
                            Width="50"
                            HorizontalAlignment="Center"
                            Content="Type" />
                        <ComboBox
                            Width="150"
                            DropDownClosed="CellTypeComboBoxSelectionChanged"
                            Text="{Binding CellType, Mode=OneWay, Converter={StaticResource EnumToStringConverter}}">
                            <Label Content="Label" />
                            <Label Content="Textbox" />
                            <Label Content="Checkbox" />
                            <Label Content="Button" />
                            <Label Content="Dropdown" />
                            <Label Content="List" />
                            <Label Content="Progress" />
                            <Label Content="Graph" />
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Button
                            Width="50"
                            Click="IndexButtonClicked"
                            Content="Index" />
                        <TextBox
                            Width="35"
                            HorizontalContentAlignment="Center"
                            KeyDown="TextBoxKeyDown"
                            Text="{Binding Path=Index, UpdateSourceTrigger=LostFocus}" />
                        <Grid>
                            <ToggleButton
                                x:Name="MergeTogglePopupButton"
                                Width="25"
                                Content="⇔"
                                FontSize="16">
                                <ToggleButton.Style>
                                    <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Background" Value="{StaticResource CellBackground}" />
                                        <Setter Property="Foreground" Value="{StaticResource ForegroundColor}" />
                                        <Setter Property="BorderBrush" Value="{StaticResource CellBorderColor}" />
                                        <Setter Property="IsHitTestVisible" Value="True" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border
                                                        Background="{TemplateBinding Background}"
                                                        BorderBrush="{StaticResource CellBorderColor}"
                                                        BorderThickness="1">
                                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="{StaticResource SelectedColor}" />
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Background" Value="{StaticResource SelectedColor}" />
                                            </Trigger>
                                            <DataTrigger Binding="{Binding ElementName=MergePopup, Path=IsOpen}" Value="True">
                                                <Setter Property="IsHitTestVisible" Value="False" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <Popup
                                x:Name="MergePopup"
                                IsOpen="{Binding IsChecked, ElementName=MergeTogglePopupButton, Mode=TwoWay}"
                                Placement="Bottom"
                                PlacementTarget="{Binding ElementName=MergeTogglePopupButton}"
                                PopupAnimation="Slide"
                                StaysOpen="False">
                                <Border BorderBrush="{StaticResource SelectedBorderColor}" BorderThickness="4">
                                    <StackPanel>
                                        <Button
                                            Width="70"
                                            Click="MergeButtonClicked"
                                            Content="Merge" />
                                        <Button
                                            Width="70"
                                            Click="MergeAcrossButtonClicked"
                                            Content="Across" />
                                        <Button
                                            Width="70"
                                            Click="MergeDownButtonClicked"
                                            Content="Down" />
                                        <Button
                                            Width="70"
                                            Click="UnmergeButtonClicked"
                                            Content="Unmerge" />
                                    </StackPanel>
                                </Border>
                            </Popup>
                        </Grid>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Width="65" Content="Populate" />
                        <Button
                            Width="35"
                            Click="EditGetTextFunctionButtonClicked"
                            Content="Edit" />
                        <TextBox
                            Width="100"
                            KeyDown="TextBoxKeyDown"
                            Text="{Binding Path=PopulateFunctionName, UpdateSourceTrigger=LostFocus}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Width="65" Content="Updated" />
                        <Button
                            Width="35"
                            Click="EditOnEditFunctionButtonClicked"
                            Content="Edit" />
                        <TextBox
                            Width="100"
                            KeyDown="TextBoxKeyDown"
                            Text="{Binding Path=TriggerFunctionName, UpdateSourceTrigger=LostFocus}" />
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModel:CornerCellViewModel}">
                <StackPanel>
                    <Label Content="Sheets" />
                    <ListBox ItemsSource="{Binding SheetNames}" />
                    <Label Content="Functions" />
                    <ListBox ItemsSource="{Binding PopulateFunctionNames}" />
                    <ListBox ItemsSource="{Binding TriggerFunctionNames}" />
                    <Label Content="Collections" />
                    <ListBox ItemsSource="{Binding CollectionNames}" />
                    <Button Click="CreateBackupButtonClicked" Content="Create Backup" />
                </StackPanel>
            </DataTemplate>
        </ContentControl.Resources>
    </ContentControl>
</UserControl>
