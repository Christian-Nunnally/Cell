<UserControl
    x:Class="Cell.View.ToolWindow.CellFormatEditWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cell="clr-namespace:Cell.ViewModel.Cells"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Cell.View"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:special="clr-namespace:Cell.ViewModel.Cells.Types.Special"
    xmlns:viewModel="clr-namespace:Cell.ViewModel.Cells.Types"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    d:DataContext="{d:DesignInstance Type=cell:CellViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <ContentControl Content="{Binding}">
        <ContentControl.Resources>
            <DataTemplate DataType="{x:Type special:RowCellViewModel}">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Width="100" Content="Height" />
                        <TextBox
                            Width="100"
                            KeyDown="TextBoxKeyDown"
                            Text="{Binding Path=Height, UpdateSourceTrigger=LostFocus}" />
                    </StackPanel>
                    <Button Click="CreateNewRowAboveButtonClicked" Content="Insert Row Above" />
                    <Button Click="CreateNewRowBelowButtonClicked" Content="Insert Row Below" />
                    <Button Click="DeleteRowButtonClicked" Content="Delete Row" />
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type special:ColumnCellViewModel}">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Width="100" Content="Width" />
                        <TextBox
                            Width="100"
                            KeyDown="TextBoxKeyDown"
                            Text="{Binding Path=Width, UpdateSourceTrigger=LostFocus}" />
                    </StackPanel>
                    <Button Click="CreateNewColumnToTheLeftButtonClicked" Content="Insert Column to Left" />
                    <Button Click="CreateNewColumnToTheRightButtonClicked" Content="Insert Column to Right" />
                    <Button Click="DeleteColumnButtonClicked" Content="Delete Column" />
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type cell:CellViewModel}">
                <StackPanel>
                    <Grid>
                        <xctk:ColorPicker
                            Height="150"
                            ButtonStyle="{StaticResource BorderColorPickerToggleButtonStyle}"
                            Foreground="{StaticResource ForegroundColor}"
                            Loaded="ColorPicker_Loaded"
                            SelectedColor="{Binding BorderColorHex, Converter={StaticResource HexToColorConverter}}"
                            Style="{StaticResource TestColorPicker}" />
                        <xctk:ColorPicker
                            Margin="10"
                            ButtonStyle="{StaticResource BackgroundColorPickerToggleButtonStyle}"
                            Foreground="{StaticResource ForegroundColor}"
                            Loaded="ColorPicker_Loaded"
                            SelectedColor="{Binding BackgroundColorHex, Converter={StaticResource HexToColorConverter}}"
                            Style="{StaticResource TestColorPicker}" />
                        <xctk:ColorPicker
                            Margin="30"
                            ButtonStyle="{StaticResource BorderColorPickerToggleButtonStyle}"
                            Foreground="{StaticResource ForegroundColor}"
                            Loaded="ColorPicker_Loaded"
                            SelectedColor="{Binding ContentBorderColorHex, Converter={StaticResource HexToColorConverter}}"
                            Style="{StaticResource TestColorPicker}" />
                        <xctk:ColorPicker
                            Margin="40"
                            ButtonStyle="{StaticResource BackgroundColorPickerToggleButtonStyle}"
                            Foreground="{StaticResource ForegroundColor}"
                            Loaded="ColorPicker_Loaded"
                            SelectedColor="{Binding ContentBackgroundColorHex, Converter={StaticResource HexToColorConverter}}"
                            Style="{StaticResource TestColorPicker}" />
                        <Grid Margin="40">
                            <ToggleButton
                                x:Name="TextFormattingTogglePopupButton"
                                Grid.Row="1"
                                Grid.Column="1">
                                <ToggleButton.Style>
                                    <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Background" Value="{StaticResource ControlBackground}" />
                                        <Setter Property="Foreground" Value="{StaticResource ForegroundColor}" />
                                        <Setter Property="BorderBrush" Value="{StaticResource CellBorderColor}" />
                                        <Setter Property="IsHitTestVisible" Value="True" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <TextBlock
                                                        Grid.Row="1"
                                                        Grid.Column="1"
                                                        Padding="0"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        FontFamily="{Binding FontFamily}"
                                                        FontSize="20"
                                                        FontStyle="{Binding FontStyleForView}"
                                                        FontWeight="{Binding FontWeightForView}"
                                                        Text="Text"
                                                        TextDecorations="{Binding TextDecorationsForView}">
                                                        <TextBlock.Style>
                                                            <Style TargetType="TextBlock">
                                                                <Setter Property="Foreground" Value="{Binding ForegroundColor}" />
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Foreground" Value="{StaticResource SelectedBorderColor}" />
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=TextFormattingPopup, Path=IsOpen}" Value="True">
                                                <Setter Property="IsHitTestVisible" Value="False" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <Popup
                                x:Name="TextFormattingPopup"
                                IsOpen="{Binding IsChecked, ElementName=TextFormattingTogglePopupButton, Mode=TwoWay}"
                                PlacementTarget="{Binding ElementName=TextFormattingTogglePopupButton}">
                                <Border
                                    Background="{StaticResource CellBackground}"
                                    BorderBrush="{StaticResource SelectedBorderColor}"
                                    BorderThickness="4">
                                    <StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBox
                                                Width="125"
                                                KeyDown="TextBoxKeyDown"
                                                Text="{Binding Path=FontFamily, UpdateSourceTrigger=LostFocus}" />
                                            <TextBox
                                                Width="25"
                                                HorizontalContentAlignment="Center"
                                                KeyDown="TextBoxKeyDown"
                                                Text="{Binding Path=FontSize, UpdateSourceTrigger=LostFocus}" />
                                            <ToggleButton
                                                Width="25"
                                                Content="b"
                                                FontWeight="Bold"
                                                IsChecked="{Binding IsFontBold}" />
                                            <ToggleButton
                                                Width="25"
                                                Content="i"
                                                FontStyle="Italic"
                                                IsChecked="{Binding IsFontItalic}" />
                                            <ToggleButton Width="25" IsChecked="{Binding IsFontStrikethrough}">
                                                <TextBlock Text="s" TextDecorations="Strikethrough" />
                                            </ToggleButton>

                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <xctk:ColorPicker
                                                Width="25"
                                                ButtonStyle="{StaticResource ColorPickerToggleButtonStyle}"
                                                Foreground="{StaticResource ForegroundColor}"
                                                Loaded="ColorPicker_Loaded"
                                                SelectedColor="{Binding ForegroundColorHex, Converter={StaticResource HexToColorConverter}}" />
                                            <Label Width="75" Content="Foreground" />
                                            <xctk:ColorPicker
                                                Width="25"
                                                ButtonStyle="{StaticResource ColorPickerToggleButtonStyle}"
                                                Loaded="ColorPicker_Loaded"
                                                SelectedColor="{Binding ContentHighlightColorHex, Converter={StaticResource HexToColorConverter}}" />
                                            <Label Width="75" Content="Highlight" />
                                            <Grid>
                                                <ToggleButton
                                                    x:Name="TogglePopupButton"
                                                    Width="25"
                                                    Content="⇆"
                                                    FontSize="14">
                                                    <ToggleButton.Style>
                                                        <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="{x:Type ToggleButton}">
                                                            <Setter Property="Background" Value="{StaticResource ControlBackground}" />
                                                            <Setter Property="Foreground" Value="{StaticResource ForegroundColor}" />
                                                            <Setter Property="BorderBrush" Value="{StaticResource CellBorderColor}" />
                                                            <Setter Property="IsHitTestVisible" Value="True" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                        <Border
                                                                            Background="{TemplateBinding Background}"
                                                                            BorderBrush="{StaticResource CellBorderColor}"
                                                                            BorderThickness="1">
                                                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ElementName=Popup, Path=IsOpen}" Value="True">
                                                                    <Setter Property="IsHitTestVisible" Value="False" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ToggleButton.Style>
                                                </ToggleButton>
                                                <Popup
                                                    x:Name="Popup"
                                                    IsOpen="{Binding IsChecked, ElementName=TogglePopupButton, Mode=TwoWay}"
                                                    PlacementTarget="{Binding ElementName=TogglePopupButton}">
                                                    <Border BorderBrush="{StaticResource SelectedBorderColor}" BorderThickness="4">
                                                        <StackPanel>
                                                            <StackPanel Orientation="Horizontal">
                                                                <Button
                                                                    Click="SetAlignmentToTopLeftButtonClick"
                                                                    Content="↖"
                                                                    Style="{StaticResource AlignmentButtonStyle}" />
                                                                <Button
                                                                    Click="SetAlignmentToTopButtonClick"
                                                                    Content="↑"
                                                                    Style="{StaticResource AlignmentButtonStyle}" />
                                                                <Button
                                                                    Click="SetAlignmentToTopRightButtonClick"
                                                                    Content="↗"
                                                                    Style="{StaticResource AlignmentButtonStyle}" />
                                                            </StackPanel>
                                                            <StackPanel Orientation="Horizontal">
                                                                <Button
                                                                    Click="SetAlignmentToLeftButtonClick"
                                                                    Content="←"
                                                                    Style="{StaticResource AlignmentButtonStyle}" />
                                                                <Button
                                                                    Click="SetAlignmentToCenterButtonClick"
                                                                    Content="•"
                                                                    Style="{StaticResource AlignmentButtonStyle}" />
                                                                <Button
                                                                    Click="SetAlignmentToRightButtonClick"
                                                                    Content="→"
                                                                    Style="{StaticResource AlignmentButtonStyle}" />
                                                            </StackPanel>
                                                            <StackPanel Orientation="Horizontal">
                                                                <Button
                                                                    Click="SetAlignmentToBottomLeftButtonClick"
                                                                    Content="↙"
                                                                    Style="{StaticResource AlignmentButtonStyle}" />
                                                                <Button
                                                                    Click="SetAlignmentToBottomButtonClick"
                                                                    Content="↓"
                                                                    Style="{StaticResource AlignmentButtonStyle}" />
                                                                <Button
                                                                    Click="SetAlignmentToBottomRightButtonClick"
                                                                    Content="↘"
                                                                    Style="{StaticResource AlignmentButtonStyle}" />
                                                            </StackPanel>
                                                            <StackPanel Orientation="Horizontal">
                                                                <Button
                                                                    Click="SetTextAlignmentToLeftButtonClick"
                                                                    Content="←"
                                                                    Style="{StaticResource AlignmentButtonStyle}" />
                                                                <Button
                                                                    Click="SetTextAlignmentToCenterButtonClick"
                                                                    Content="•"
                                                                    Style="{StaticResource AlignmentButtonStyle}" />
                                                                <Button
                                                                    Click="SetTextAlignmentToRightButtonClick"
                                                                    Content="→"
                                                                    Style="{StaticResource AlignmentButtonStyle}" />
                                                            </StackPanel>
                                                        </StackPanel>
                                                    </Border>
                                                </Popup>
                                            </Grid>
                                        </StackPanel>
                                    </StackPanel>
                                </Border>
                            </Popup>
                        </Grid>

                        <TextBox
                            Width="20"
                            Height="20"
                            Margin="0,45"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            HorizontalContentAlignment="Center"
                            Background="{Binding ContentBackgroundColor}"
                            BorderBrush="{Binding BorderColor}"
                            BorderThickness="2"
                            FontWeight="Bold"
                            Foreground="{Binding ForegroundColor}"
                            Opacity=".5"
                            Text="{Binding BorderThicknessLeft}" />
                        <TextBox
                            Width="20"
                            Height="20"
                            Margin="0,45"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            HorizontalContentAlignment="Center"
                            Background="{Binding ContentBackgroundColor}"
                            BorderBrush="{Binding BorderColor}"
                            BorderThickness="2"
                            FontWeight="Bold"
                            Foreground="{Binding ForegroundColor}"
                            Opacity=".5"
                            Text="{Binding BorderThicknessRight}" />
                        <TextBox
                            Width="20"
                            Height="20"
                            Margin="10,65"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            HorizontalContentAlignment="Center"
                            Background="{Binding ContentBackgroundColor}"
                            BorderBrush="{Binding BackgroundColor}"
                            BorderThickness="2"
                            FontWeight="Bold"
                            Foreground="{Binding ForegroundColor}"
                            Opacity=".5"
                            Text="{Binding MarginLeft}" />
                        <TextBox
                            Width="20"
                            Height="20"
                            Margin="10,65"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            HorizontalContentAlignment="Center"
                            Background="{Binding ContentBackgroundColor}"
                            BorderBrush="{Binding BackgroundColor}"
                            BorderThickness="2"
                            FontWeight="Bold"
                            Foreground="{Binding ForegroundColor}"
                            Opacity=".5"
                            Text="{Binding MarginRight}" />
                        <TextBox
                            Width="20"
                            Height="20"
                            Margin="30,65"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            HorizontalContentAlignment="Center"
                            Background="{Binding ContentBackgroundColor}"
                            BorderBrush="{Binding ContentBorderColor}"
                            BorderThickness="2"
                            FontWeight="Bold"
                            Foreground="{Binding ForegroundColor}"
                            Opacity=".5"
                            Text="{Binding ContentBorderThicknessLeft}" />
                        <TextBox
                            Width="20"
                            Height="20"
                            Margin="30,65"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            HorizontalContentAlignment="Center"
                            Background="{Binding ContentBackgroundColor}"
                            BorderBrush="{Binding ContentBorderColor}"
                            BorderThickness="2"
                            FontWeight="Bold"
                            Foreground="{Binding ForegroundColor}"
                            Opacity=".5"
                            Text="{Binding ContentBorderThicknessRight}" />
                        <TextBox
                            Width="20"
                            Height="20"
                            Margin="70,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            HorizontalContentAlignment="Center"
                            Background="{Binding ContentBackgroundColor}"
                            BorderBrush="{Binding BorderColor}"
                            BorderThickness="2"
                            FontWeight="Bold"
                            Foreground="{Binding ForegroundColor}"
                            Text="{Binding BorderThicknessTop}" />
                        <TextBox
                            Width="20"
                            Height="20"
                            Margin="70,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Bottom"
                            HorizontalContentAlignment="Center"
                            Background="{Binding ContentBackgroundColor}"
                            BorderBrush="{Binding BorderColor}"
                            BorderThickness="2"
                            FontWeight="Bold"
                            Foreground="{Binding ForegroundColor}"
                            Opacity=".5"
                            Text="{Binding BorderThicknessBottom}" />
                        <TextBox
                            Width="20"
                            Height="20"
                            Margin="90,10"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            HorizontalContentAlignment="Center"
                            Background="{Binding ContentBackgroundColor}"
                            BorderBrush="{Binding BackgroundColor}"
                            BorderThickness="2"
                            FontWeight="Bold"
                            Foreground="{Binding ForegroundColor}"
                            Text="{Binding MarginTop}" />
                        <TextBox
                            Width="20"
                            Height="20"
                            Margin="90,10"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Bottom"
                            HorizontalContentAlignment="Center"
                            Background="{Binding ContentBackgroundColor}"
                            BorderBrush="{Binding BackgroundColor}"
                            BorderThickness="2"
                            FontWeight="Bold"
                            Foreground="{Binding ForegroundColor}"
                            Opacity=".5"
                            Text="{Binding MarginBottom}" />
                        <TextBox
                            Width="20"
                            Height="20"
                            Margin="90,30"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            HorizontalContentAlignment="Center"
                            Background="{Binding ContentBackgroundColor}"
                            BorderBrush="{Binding ContentBorderColor}"
                            BorderThickness="2"
                            FontWeight="Bold"
                            Foreground="{Binding ForegroundColor}"
                            Text="{Binding ContentBorderThicknessTop}" />
                        <TextBox
                            Width="20"
                            Height="20"
                            Margin="90,30"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Bottom"
                            HorizontalContentAlignment="Center"
                            Background="{Binding ContentBackgroundColor}"
                            BorderBrush="{Binding ContentBorderColor}"
                            BorderThickness="2"
                            FontWeight="Bold"
                            Foreground="{Binding ForegroundColor}"
                            Opacity=".5"
                            Text="{Binding ContentBorderThicknessBottom}" />

                        <Grid>
                            <ToggleButton
                                x:Name="MergeTogglePopupButton"
                                Width="25"
                                Height="25"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                Content="⇔"
                                FontSize="16">
                                <ToggleButton.Style>
                                    <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Background" Value="{StaticResource CellBackground}" />
                                        <Setter Property="Foreground" Value="{StaticResource ForegroundColor}" />
                                        <Setter Property="BorderBrush" Value="{StaticResource CellBorderColor}" />
                                        <Setter Property="IsHitTestVisible" Value="True" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border
                                                        Background="{TemplateBinding Background}"
                                                        BorderBrush="{StaticResource CellBorderColor}"
                                                        BorderThickness="1"
                                                        CornerRadius="4">
                                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=MergePopup, Path=IsOpen}" Value="True">
                                                <Setter Property="IsHitTestVisible" Value="False" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <Popup
                                x:Name="MergePopup"
                                IsOpen="{Binding IsChecked, ElementName=MergeTogglePopupButton, Mode=TwoWay}"
                                PlacementTarget="{Binding ElementName=MergeTogglePopupButton}">
                                <Border BorderBrush="{StaticResource SelectedBorderColor}" BorderThickness="4">
                                    <StackPanel>
                                        <Button
                                            Width="70"
                                            Click="MergeButtonClicked"
                                            Content="Merge" />
                                        <Button
                                            Width="70"
                                            Click="MergeAcrossButtonClicked"
                                            Content="Across" />
                                        <Button
                                            Width="70"
                                            Click="MergeDownButtonClicked"
                                            Content="Down" />
                                        <Button
                                            Width="70"
                                            Click="UnmergeButtonClicked"
                                            Content="Unmerge" />
                                    </StackPanel>
                                </Border>
                            </Popup>
                        </Grid>

                        <Grid>
                            <ToggleButton
                                x:Name="TypeTogglePopupButton"
                                Margin="46,40"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Content="{Binding CellType}"
                                FontSize="10">
                                <ToggleButton.Style>
                                    <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="Foreground" Value="{StaticResource ForegroundColor}" />
                                        <Setter Property="IsHitTestVisible" Value="True" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Background="{TemplateBinding Background}" CornerRadius="4">
                                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=TypePopup, Path=IsOpen}" Value="True">
                                                <Setter Property="IsHitTestVisible" Value="False" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <Popup
                                x:Name="TypePopup"
                                IsOpen="{Binding IsChecked, ElementName=TypeTogglePopupButton, Mode=TwoWay}"
                                PlacementTarget="{Binding ElementName=TypeTogglePopupButton}">
                                <Border BorderBrush="{StaticResource SelectedBorderColor}" BorderThickness="4">
                                    <StackPanel>
                                        <Button
                                            Width="70"
                                            Click="ChangeCellTypeCellClicked"
                                            Content="Label" />
                                        <Button
                                            Width="70"
                                            Click="ChangeCellTypeCellClicked"
                                            Content="Textbox" />
                                        <Button
                                            Width="70"
                                            Click="ChangeCellTypeCellClicked"
                                            Content="Checkbox" />
                                        <Button
                                            Width="70"
                                            Click="ChangeCellTypeCellClicked"
                                            Content="Button" />
                                        <Button
                                            Width="70"
                                            Click="ChangeCellTypeCellClicked"
                                            Content="Dropdown" />
                                        <Button
                                            Width="70"
                                            Click="ChangeCellTypeCellClicked"
                                            Content="List" />
                                        <Button
                                            Width="70"
                                            Click="ChangeCellTypeCellClicked"
                                            Content="Progress" />
                                        <Button
                                            Width="70"
                                            Click="ChangeCellTypeCellClicked"
                                            Content="Graph" />
                                        <Button
                                            Width="70"
                                            Click="ChangeCellTypeCellClicked"
                                            Content="Date" />
                                    </StackPanel>
                                </Border>
                            </Popup>
                        </Grid>
                    </Grid>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type special:CornerCellViewModel}">
                <Label />
            </DataTemplate>
        </ContentControl.Resources>
    </ContentControl>
</UserControl>
