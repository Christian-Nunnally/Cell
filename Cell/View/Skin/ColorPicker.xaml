<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">
    <ControlTemplate x:Key="TabItemTemplate" TargetType="{x:Type xctk:ColorPickerTabItem}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Border
                x:Name="mainBorder"
                Margin="0"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="1,1,1,0">
                <Border
                    x:Name="innerBorder"
                    Margin="-1"
                    Background="{TemplateBinding Background}"
                    BorderBrush="#ACACAC"
                    BorderThickness="1,1,1,0"
                    Opacity="0" />
            </Border>
            <!--
                HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
            -->
            <ContentPresenter
                x:Name="contentPresenter"
                Margin="{TemplateBinding Padding}"
                ContentSource="Header"
                Focusable="False"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Panel.ZIndex" Value="1" />
                <Setter Property="Margin" Value="-2,-2,-2,0" />
                <Setter TargetName="innerBorder" Property="Opacity" Value="1" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ColorItemContainerStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="ToolTip" Value="{Binding Name}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid x:Name="mainGrid" ToolTip="{Binding Name}">
                        <Grid.Resources>
                            <Style TargetType="ToolTip">
                                <Style.Triggers>
                                    <Trigger Property="Content" Value="{x:Static sys:String.Empty}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Resources>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <Border
                            x:Name="_outerBorder"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="1">
                            <Border
                                x:Name="_innerBorder"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="1" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="_outerBorder" Property="BorderBrush" Value="#FFFF0000" />
                            <Setter TargetName="_innerBorder" Property="BorderBrush" Value="#FFFFFF00" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="_outerBorder" Property="BorderBrush" Value="#FFFF0000" />
                            <Setter TargetName="_innerBorder" Property="BorderBrush" Value="#FFFFFF00" />
                        </Trigger>
                        <DataTrigger Binding="{Binding DisplayColorTooltip, RelativeSource={RelativeSource AncestorType={x:Type xctk:ColorPicker}}}" Value="False">
                            <Setter TargetName="mainGrid" Property="ToolTip" Value="{x:Static sys:String.Empty}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="ColorItemTemplate">
        <Grid>
            <Border
                Margin="2,2,2,2"
                Background="{StaticResource CellBackground}"
                BorderBrush="Black"
                BorderThickness="1">
                <Rectangle Width="14" Height="14">
                    <Rectangle.Style>
                        <Style TargetType="Rectangle">
                            <Setter Property="Fill" Value="{Binding Color, Converter={StaticResource ColorToSolidColorBrushConverter}}" />
                        </Style>
                    </Rectangle.Style>
                </Rectangle>
            </Border>
        </Grid>
    </DataTemplate>

    <Style x:Key="ColorListStyle" TargetType="ListBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MaxHeight" Value="275" />
        <!--  ConverterParameter is margin/Padding from Popup  -->
        <Setter Property="Width" Value="{Binding MaxDropDownWidth, RelativeSource={RelativeSource AncestorType={x:Type xctk:ColorPicker}}, Converter={StaticResource AdditionConverter}, ConverterParameter=-18}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Width="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}, Converter={StaticResource AdditionConverter}, ConverterParameter=-4}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ColorItemContainerStyle}" />
        <Setter Property="ItemTemplate" Value="{StaticResource ColorItemTemplate}" />
        <Setter Property="SelectionMode" Value="Single" />
    </Style>

    <Style x:Key="ColorPickerToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border>
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="BorderBrush" Value="{StaticResource CellBorderColor}" />
                                <Setter Property="Background" Value="{StaticResource CellBackground}" />
                                <Setter Property="BorderThickness" Value="1" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{StaticResource SelectedColor}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SelectedColor}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource SelectedColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type xctk:ColorPicker}">
        <Setter Property="Background" Value="{StaticResource CellBackground}" />
        <Setter Property="HeaderBackground" Value="{StaticResource CellBackground}" />
        <Setter Property="DropDownBackground" Value="{StaticResource CellBackground}" />
        <Setter Property="TabBackground" Value="{StaticResource CellBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource CellBorderColor}" />
        <Setter Property="DropDownBorderBrush" Value="{StaticResource CellBorderColor}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundColor}" />
        <Setter Property="HeaderForeground" Value="{StaticResource ForegroundColor}" />
        <Setter Property="TabForeground" Value="{StaticResource ForegroundColor}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="MaxDropDownWidth" Value="265" />
        <Setter Property="DropDownBorderThickness" Value="1" />
        <Setter Property="UsingAlphaChannel" Value="False" />
        <Setter Property="ShowDropDownButton" Value="False" />
        <Setter Property="AvailableColorsSortingMode" Value="HueSaturationBrightness" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xctk:ColorPicker}">
                    <Grid>
                        <ToggleButton
                            x:Name="PART_ColorPickerToggleButton"
                            MinHeight="22"
                            Padding="0"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Background="{StaticResource CellBackground}"
                            BorderBrush="{StaticResource CellBorderColor}"
                            BorderThickness="0"
                            IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                            IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}"
                            IsTabStop="True"
                            Style="{TemplateBinding ButtonStyle}">
                            <Border BorderBrush="{StaticResource CellBorderColor}" BorderThickness="1">
                                <Rectangle Margin="2" Fill="{Binding SelectedColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xctk:ColorPicker}, Converter={StaticResource ColorToSolidColorBrushConverter}}" />
                            </Border>
                        </ToggleButton>

                        <Popup
                            x:Name="PART_ColorPickerPalettePopup"
                            Width="{TemplateBinding MaxDropDownWidth}"
                            VerticalAlignment="Bottom"
                            AllowsTransparency="True"
                            Focusable="False"
                            HorizontalOffset="1"
                            IsOpen="{Binding ElementName=PART_ColorPickerToggleButton, Path=IsChecked}"
                            PopupAnimation="Slide"
                            StaysOpen="False"
                            ToolTip="{x:Static sys:String.Empty}"
                            VerticalOffset="1">
                            <Popup.Resources>
                                <Style TargetType="ToolTip">
                                    <Style.Triggers>
                                        <Trigger Property="Content" Value="{x:Static sys:String.Empty}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Popup.Resources>
                            <Border
                                Padding="3"
                                Background="{TemplateBinding DropDownBackground}"
                                BorderBrush="{TemplateBinding DropDownBorderBrush}"
                                BorderThickness="{TemplateBinding DropDownBorderThickness}">
                                <TabControl
                                    x:Name="ColorPickerTabControl"
                                    Background="Transparent"
                                    SelectedIndex="{Binding ColorMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorModeToTabItemSelectedConverter}}">
                                    <xctk:ColorPickerTabItem
                                        x:Name="StandardTabItem"
                                        Background="{TemplateBinding TabBackground}"
                                        Foreground="{TemplateBinding TabForeground}"
                                        Header="{Binding StandardTabHeader, RelativeSource={RelativeSource TemplatedParent}}"
                                        Template="{StaticResource TabItemTemplate}">
                                        <Grid x:Name="_colorPaletteHost" Margin="4">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>

                                            <!--  Available Colors  -->
                                            <Grid Grid.Row="1" Visibility="{TemplateBinding ShowAvailableColors, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition />
                                                    </Grid.RowDefinitions>
                                                    <TextBlock
                                                        Margin="0,0,0,1"
                                                        Padding="2"
                                                        Background="{TemplateBinding HeaderBackground}"
                                                        Foreground="{TemplateBinding HeaderForeground}"
                                                        Text="{TemplateBinding AvailableColorsHeader}" />
                                                    <ListBox
                                                        x:Name="PART_AvailableColors"
                                                        Grid.Row="1"
                                                        ItemsSource="{Binding AvailableColors, RelativeSource={RelativeSource TemplatedParent}}"
                                                        Style="{StaticResource ColorListStyle}" />
                                                </Grid>
                                            </Grid>

                                            <!--  Standard Colors  -->
                                            <Grid Grid.Row="2" Visibility="{TemplateBinding ShowStandardColors, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition Height="Auto" />
                                                    </Grid.RowDefinitions>
                                                    <TextBlock
                                                        Margin="0,1,0,1"
                                                        Padding="2"
                                                        Background="{TemplateBinding HeaderBackground}"
                                                        Foreground="{TemplateBinding HeaderForeground}"
                                                        Text="{TemplateBinding StandardColorsHeader}" />
                                                    <ListBox
                                                        x:Name="PART_StandardColors"
                                                        Grid.Row="1"
                                                        ItemsSource="{Binding StandardColors, RelativeSource={RelativeSource TemplatedParent}}"
                                                        Style="{StaticResource ColorListStyle}" />
                                                </Grid>
                                            </Grid>

                                            <!--  Recent Colors  -->
                                            <Grid
                                                Grid.Row="3"
                                                Margin="0,1,0,1"
                                                Visibility="{TemplateBinding ShowRecentColors,
                                                                             Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition Height="22" />
                                                    </Grid.RowDefinitions>
                                                    <TextBlock
                                                        Margin="0,1,0,1"
                                                        Padding="2"
                                                        Background="{TemplateBinding HeaderBackground}"
                                                        Foreground="{TemplateBinding HeaderForeground}"
                                                        Text="{TemplateBinding RecentColorsHeader}" />
                                                    <ListBox
                                                        x:Name="PART_RecentColors"
                                                        Grid.Row="1"
                                                        ItemsSource="{Binding RecentColors, RelativeSource={RelativeSource TemplatedParent}}"
                                                        Style="{StaticResource ColorListStyle}" />
                                                </Grid>
                                            </Grid>
                                        </Grid>
                                    </xctk:ColorPickerTabItem>
                                    <xctk:ColorPickerTabItem
                                        x:Name="AdvancedTabItem"
                                        Background="{TemplateBinding TabBackground}"
                                        Foreground="{TemplateBinding TabForeground}"
                                        Header="{Binding AdvancedTabHeader, RelativeSource={RelativeSource TemplatedParent}}"
                                        Template="{StaticResource TabItemTemplate}">
                                        <!--  ColorCanvas  -->
                                        <!--  ConverterParameter is margin/Padding from Popup  -->
                                        <Grid x:Name="_colorCanvasHost" Width="{Binding MaxDropDownWidth, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource AdditionConverter}, ConverterParameter=-18}">
                                            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Hidden">
                                                <xctk:ColorCanvas
                                                    Background="Transparent"
                                                    BorderThickness="0"
                                                    Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                                                    SelectedColor="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}}"
                                                    UsingAlphaChannel="{Binding UsingAlphaChannel, RelativeSource={RelativeSource TemplatedParent}}" />
                                            </ScrollViewer>
                                        </Grid>
                                    </xctk:ColorPickerTabItem>
                                </TabControl>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowTabHeaders" Value="False">
                            <Setter TargetName="StandardTabItem" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="AdvancedTabItem" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>