<Window 
    x:Class="Cell.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:Cell"
    xmlns:controls="clr-namespace:Cell.Controls" 
    xmlns:viewModel="clr-namespace:Cell.ViewModel" 
    d:DataContext="{d:DesignInstance Type=viewModel:SheetViewModel}"
    mc:Ignorable="d"
    Title="MainWindow" 
    Height="450" 
    Width="800"
    WindowStyle="None"
    WindowState="Normal" 
    ResizeMode="CanResize"
    SizeChanged="Window_SizeChanged">
    <Window.Resources>

        <!--   vvv SKIN vvv   -->
        <SolidColorBrush x:Key="CellBackground" Color="#1e1e1e"/>
        <SolidColorBrush x:Key="CellBorderColor" Color="#2d2d30"/>
        <SolidColorBrush x:Key="CellHeaderColor" Color="#3e3e42"/>
        <SolidColorBrush x:Key="ForgroundColor" Color="#ffffff"/>
        <SolidColorBrush x:Key="SelectedColor" Color="#007acc"/>
        <!--   ^^^ SKIN ^^^   -->

        <Style x:Key="TitleButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource CellBackground}"></Setter>
            <Setter Property="Foreground" Value="{StaticResource ForgroundColor}"></Setter>
            <Setter Property="Width" Value="35"></Setter>
            <Setter Property="Height" Value="28"></Setter>
            <Setter Property="FontFamily" Value="Consolas"></Setter>
        </Style>

        <Style TargetType="Label">
            <Setter Property="Foreground" Value="{StaticResource ForgroundColor}"/>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Background" Value="{StaticResource CellBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource ForgroundColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CellBorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
        </Style>

        <Style TargetType="Thumb">
            <Setter Property="Visibility" Value="Hidden"/>
        </Style>

    </Window.Resources>
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="28"/>
    </WindowChrome.WindowChrome>
    <DockPanel x:Name="RootWindow">
        <DockPanel 
            x:Name="TitleBar" 
            DockPanel.Dock="Top"
            Height="28"
            Background="{StaticResource CellBackground}">
            <Button 
                x:Name="CloseButton" 
                Style="{StaticResource TitleButtonStyle}"
                Content="x"
                Click="CloseButton_Click"
                DockPanel.Dock="Right" 
                WindowChrome.IsHitTestVisibleInChrome="True"/>
            <Button 
                x:Name="MaxButton" Content="☐"
                Style="{StaticResource TitleButtonStyle}"
                Click="MaximizeButton_Click"
                DockPanel.Dock="Right" 
                WindowChrome.IsHitTestVisibleInChrome="True"/>
            <Button 
                x:Name="MinButton" Content="-"
                Style="{StaticResource TitleButtonStyle}"
                Click="MinimizeButton_Click"
                DockPanel.Dock="Right" 
                WindowChrome.IsHitTestVisibleInChrome="True"/>
            <Label></Label>
       </DockPanel>

        <Grid PreviewKeyDown="PreviewKeyDown">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding EditingSpaceLeft}"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="{Binding EditingSpaceRight}"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="{Binding EditingSpaceTop}"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="{Binding EditingSpaceBottom}"/>
            </Grid.RowDefinitions>

            <ListBox 
                ItemsSource="{Binding Path=CellViewModels}" 
                Margin="0" 
                BorderThickness="0" 
                Padding="0" 
                Background="{StaticResource CellBackground}" 
                Grid.Row="1" 
                Grid.Column="1">
                <ListBox.Resources>
                    <DataTemplate DataType="{x:Type viewModel:RowCellViewModel}">
                        <Border Background="{StaticResource CellHeaderColor}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                            <Grid>
                                <Thumb Cursor="SizeNS" DragDelta="RowResizeTopThumbDelta">
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Rectangle Fill="{StaticResource CellBackground}" Height="1" VerticalAlignment="Top" Margin="0,-1,0,0"/>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                                <Label Content="{Binding Text}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Foreground="{StaticResource ForgroundColor}" Padding="0"/>
                                <Thumb Cursor="SizeNS" DragDelta="RowResizeBottomThumbDelta" DragStarted="RowResizeBottomThumbDragStarted" DragCompleted="RowResizeBottomThumbDragCompleted">
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Rectangle Fill="{StaticResource CellBackground}" Height="1" VerticalAlignment="Bottom" Margin="0,0,0,-1"/>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Grid>
                        </Border>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModel:ColumnCellViewModel}">
                        <Border Background="{StaticResource CellHeaderColor}">
                            <Grid>
                                <Thumb Cursor="SizeWE">
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Rectangle Fill="{StaticResource CellBackground}" Width="1" HorizontalAlignment="Left" Margin="-1,0,0,0"/>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                                <Label Content="{Binding Text}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Foreground="{StaticResource ForgroundColor}" Padding="0"/>
                                <Thumb Cursor="SizeWE">
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Rectangle Fill="{StaticResource CellBackground}" Width="1" HorizontalAlignment="Right" Margin="0,0,-1,0"/>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Grid>
                        </Border>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModel:CellViewModel}">
                        <Label 
                            Content="{Binding Path=Text}" 
                            Foreground="{StaticResource ForgroundColor}"
                            VerticalAlignment="Center"/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModel:CheckboxCellViewModel}">
                        <CheckBox 
                            Margin="4,0,0,0"
                            Content="{Binding Path=Text}" 
                            Foreground="{StaticResource ForgroundColor}"
                            VerticalAlignment="Center"/>
                    </DataTemplate>
                </ListBox.Resources>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <controls:PanAndZoomCanvas Loaded="PanZoomCanvasLoaded" x:Name="canvas" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Canvas.Left" Value="{Binding XTransformed, Mode=OneWay}"/>
                        <Setter Property="Canvas.Top" Value="{Binding YTransformed, Mode=OneWay}"/>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border 
                                    Width="{Binding Width}" 
                                    Height="{Binding Height}"
                                    MouseDown="CellMouseDown"
                                    BorderThickness="1">
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                        <Setter Property="Border.BorderBrush" Value="{StaticResource SelectedColor}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                                        <Setter Property="Border.BorderBrush" Value="{StaticResource CellBorderColor}"/>
                                                    </DataTrigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Border.Background" Value="{StaticResource SelectedColor}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="False">
                                                        <Setter Property="Border.Background" Value="{Binding BackgroundColor }"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <ContentPresenter 
                                            Content="{TemplateBinding Content}" 
                                            VerticalAlignment="Stretch" 
                                            HorizontalAlignment="Stretch"
                                            Margin="0"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>

            <Border
                Grid.Row="0"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                BorderThickness="2"
                BorderBrush="{StaticResource CellBorderColor}"
                Background="{StaticResource CellBackground}"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">
                <ContentControl Content="{Binding Path=SelectedCellViewModel}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type viewModel:RowCellViewModel}">
                            <Label>Undefined</Label>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModel:ColumnCellViewModel}">
                            <Label>Undefined</Label>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModel:CellViewModel}">
                            <StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label>Text:</Label>
                                    <TextBox Text="{Binding Path=Text, UpdateSourceTrigger=LostFocus}" Width="100"/>
                                </StackPanel>
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModel:CheckboxCellViewModel}">
                            <Label>Undefined</Label>
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
            </Border>
            <Border
                Grid.Row="0"
                Grid.Column="2"
                Grid.RowSpan="2"
                BorderThickness="2"
                BorderBrush="{StaticResource CellBorderColor}"
                Background="{StaticResource CellBackground}"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">
                <ContentControl Content="{Binding Path=SelectedCellViewModel}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type viewModel:RowCellViewModel}">
                            <Label>Undefined</Label>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModel:ColumnCellViewModel}">
                            <Label>Undefined</Label>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModel:CellViewModel}">
                            <StackPanel>
                                <Button Content="CreateGetText" Click="CreateGetTextPluginFunctionButtonClicked"></Button>
                                <StackPanel Orientation="Horizontal">
                                    <Label>GetText:</Label>
                                    <TextBox Text="{Binding Path=GetTextFunctionName, UpdateSourceTrigger=LostFocus}" Width="100"/>
                                </StackPanel>
                                <TextBox Text="{Binding GetTextFunctionCode, UpdateSourceTrigger=LostFocus}" AcceptsReturn="True" TextWrapping="Wrap"/>
                                <Button Content="CreateOnEdit" Click="CreateOnEditPluginFunctionButtonClicked"></Button>
                                <StackPanel Orientation="Horizontal">
                                    <Label>GetText:</Label>
                                    <TextBox Text="{Binding Path=GetTextFunctionName, UpdateSourceTrigger=LostFocus}" Width="100"/>
                                </StackPanel>
                                <TextBox Text="{Binding GetTextFunctionCode, UpdateSourceTrigger=LostFocus}" AcceptsReturn="True" TextWrapping="Wrap"/>
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModel:CheckboxCellViewModel}">
                            <Label>Undefined</Label>
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
            </Border>
            <Border
                Grid.Row="2"
                Grid.Column="1"
                Grid.ColumnSpan="2"
                BorderThickness="2"
                BorderBrush="{StaticResource CellBorderColor}"
                Background="{StaticResource CellBackground}"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">
                <ContentControl Content="{Binding Path=SelectedCellViewModel}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type viewModel:RowCellViewModel}">
                            <Label>Undefined</Label>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModel:ColumnCellViewModel}">
                            <Label>Undefined</Label>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModel:CellViewModel}">
                            <Label>Undefined</Label>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModel:CheckboxCellViewModel}">
                            <Label>Undefined</Label>
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
            </Border>
            <Border
                Grid.Row="1"
                Grid.Column="0"
                Grid.RowSpan="2"
                BorderThickness="2"
                BorderBrush="{StaticResource CellBorderColor}"
                Background="{StaticResource CellBackground}"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">
                <ContentControl Content="{Binding Path=SelectedCellViewModel}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type viewModel:RowCellViewModel}">
                            <StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label>Height:</Label>
                                    <TextBox Text="{Binding Path=Height, UpdateSourceTrigger=LostFocus}" Width="100"/>
                                </StackPanel>
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModel:ColumnCellViewModel}">
                            <StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label>Width:</Label>
                                    <TextBox Text="{Binding Path=Width, UpdateSourceTrigger=LostFocus}" Width="100"/>
                                </StackPanel>
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModel:CellViewModel}">
                            <StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label>Color:</Label>
                                    <TextBox Text="{Binding Path=BackgroundColorHex, UpdateSourceTrigger=LostFocus}" Width="100"/>
                                </StackPanel>
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModel:CheckboxCellViewModel}">
                            <Label>Undefined</Label>
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
            </Border>
        </Grid>
    </DockPanel>
</Window>
