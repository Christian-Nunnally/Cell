@startuml
class FloatingToolWindow <<partial>> {
    - _content : IToolWindow?
    - _resizableContent : IResizableToolWindow?
    - _resizing : bool
    + FloatingToolWindow(canvas:Canvas)
    +  <<event>> PropertyChanged : PropertyChangedEventHandler? 
    + IsToolWindowResizeable : bool <<get>>
    + ToolWindowTitle : string <<get>>
    + SetContent(content:UserControl) : void
    - {static} DifferenceBetweenTwoPoints(a:Point, b:Point) : Point
    - CloseButtonClicked(sender:object, e:RoutedEventArgs) : void
    - ContentDataContextChanged(sender:object, e:DependencyPropertyChangedEventArgs) : void
    - RequestClose() : void
    - ResizerRectangleMouseDown(sender:object, e:MouseButtonEventArgs) : void
    - ResizerRectangleMouseMove(sender:object, e:MouseEventArgs) : void
    - ResizerRectangleMouseUp(sender:object, e:MouseButtonEventArgs) : void
    - Toolbox_MouseDown(sender:object, e:MouseButtonEventArgs) : void
    - Toolbox_MouseLeftButtonUp(sender:object, e:MouseButtonEventArgs) : void
    - Toolbox_MouseMove(sender:object, e:MouseEventArgs) : void
}
class "ObservableCollection`1"<T> {
}
UserControl <|-- FloatingToolWindow
INotifyPropertyChanged <|-- FloatingToolWindow
FloatingToolWindow --> "_canvas" Canvas
FloatingToolWindow --> "_resizingStartPosition" Point
FloatingToolWindow o-> "Commands<CommandViewModel>" "ObservableCollection`1"
@enduml
