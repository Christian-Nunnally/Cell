@startuml
class ApplicationViewModel {
    - <<const>> BottomPanelHeight : int = 0
    - <<const>> LeftPanelHeight : int = 215
    - <<const>> RightPanelHeight : int = 0
    - <<const>> TopPanelHeight : int = 35
    + AreEditingPanelsOpen : bool
    - {static} instance : ApplicationViewModel?
    - _applicationWindowHeight : double = 1300
    - _applicationWindowWidth : double = 1200
    - _isAddingSheet : bool
    - _newSheetName : string
    - editingSpaceBottom : int
    - editingSpaceLeft : int
    - editingSpaceRight : int
    - editingSpaceTop : int
    - ApplicationViewModel(mainWindow:ApplicationView)
    + ApplicationWindowHeight : double <<get>> <<set>>
    + ApplicationWindowWidth : double <<get>> <<set>>
    + EditingSpaceBottom : int <<get>> <<set>>
    + EditingSpaceLeft : int <<get>> <<set>>
    + EditingSpaceRight : int <<get>> <<set>>
    + EditingSpaceTop : int <<get>> <<set>>
    + IsAddingSheet : bool <<get>> <<set>>
    + NewSheetName : string <<get>> <<set>>
    + {static} GetOrCreateInstance(mainWindow:ApplicationView) : ApplicationViewModel
    + ChangeSelectedCellsType(newType:CellType) : void
    + CloseEditingPanels() : void
    + OpenEditingPanels() : void
    + ToggleEditingPanels() : bool
    <<internal>> CopySelectedCells(copyTextOnly:bool) : void
    <<internal>> GoToCell(cellModel:CellModel) : void
    <<internal>> GoToSheet(sheetName:string) : void
    <<internal>> PasteCopiedCells() : void
    <<internal>> {static} RenameSheet(oldSheetName:string, newSheetName:string) : void
}
class "ObservableCollection`1"<T> {
}
PropertyChangedBase <|-- ApplicationViewModel
ApplicationViewModel --> "MainWindow" ApplicationView
ApplicationViewModel o-> "_cellClipboard" CellClipboard
ApplicationViewModel o-> "sheetViewModel" SheetViewModel
ApplicationViewModel --> "Instance" ApplicationViewModel
ApplicationViewModel --> "ApplicationSettings" ApplicationSettings
ApplicationViewModel --> "SheetNames<string>" "ObservableCollection`1"
ApplicationViewModel --> "SheetViewModel" SheetViewModel
@enduml
