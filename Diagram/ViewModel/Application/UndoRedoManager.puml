@startuml
class UndoRedoManager <<static>> {
    - {static} _isRecordingUndoState : bool
    + {static} StartRecordingUndoState() : void
    + {static} RecordCellStateForUndo(cell:CellModel) : void
    + {static} FinishRecordingUndoState() : void
    + {static} RecordCellStatesOntoUndoStack(cellsToRecordTheStateOf:IEnumerable<CellModel>) : void
    + {static} Redo() : void
    + {static} Undo() : void
    - {static} ApplyStateFromStack(stackToRestoreStateFrom:Stack<List<CellModel>>, stackToSaveOldState:Stack<List<CellModel>>) : void
    - {static} RestoreCell(cellToRestoreInto:CellModel, cellToCopyFrom:CellModel) : void
}
class "Stack`1"<T> {
}
UndoRedoManager o-> "_redoStack<List<CellModel>>" "Stack`1"
UndoRedoManager o-> "_undoStack<List<CellModel>>" "Stack`1"
UndoRedoManager o-> "_recordingStateList<CellModel>" "Stack`1"
@enduml
